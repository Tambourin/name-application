{"version":3,"sources":["utils/utils.ts","config.ts","components/NamesListItem.tsx","components/NamesList.tsx","components/SearchResult.tsx","components/SearchName.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["sortNames","names","order","sort","a","b","amount","name","apiUrl","listItemStyle","padding","marginBottom","background","display","justifyContent","alignItems","color","borderRadius","amountStyle","backgroundColor","fontWeight","fontSize","minWidth","textAlign","NamesListItem","item","style","listStyle","NamesList","useFetch","loading","error","data","useState","setOrder","count","onClick","map","headerStyle","marginTop","SearchResult","resultItem","SearchName","get","nameData","setNameData","searchword","setSearchword","getName","e","preventDefault","res","onSubmit","value","onChange","target","type","containerStyle","margin","maxWidth","backgroundImage","App","showAll","setShowAll","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.170d7375.chunk.js","sourcesContent":["import { NameItem, Order } from \"../types/types\";\n\nexport const sortNames = (names: NameItem[], order: Order) => {\n  switch (order) {\n    case \"desc\":\n      return names.sort((a, b) => {return b.amount - a.amount});    \n    case \"alph\":    \n      return names.sort((a, b) => {return b.name > a.name ? -1 : 1});\n    default:\n      return names;\n  } \n};","export const apiUrl = \"/names\"; //\"http://127.0.0.1:5000/names\";","import React from \"react\";\nimport { NameItem } from \"../types/types\";\n\nconst listItemStyle: React.CSSProperties = {  \n  padding: \"1em\",\n  marginBottom: \".5em\", \n  background: \"#eee\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  color: \"#333\",\n  borderRadius: \".1em\"\n}\n\nconst amountStyle: React.CSSProperties = {\n  backgroundColor: \"rebeccapurple\",\n  color: \"#fff\",\n  fontWeight: \"bold\",\n  fontSize: \"80%\",\n  borderRadius: \"10em\",\n  minWidth: \"1.5em\",\n  padding: \".25em\",\n  textAlign: \"center\"\n}\n\ninterface Props {\n  item: NameItem\n}\n\nconst NamesListItem = ({ item }: Props) => {\n  return (\n    <li style={listItemStyle}>\n      {item.name}\n      <span style={amountStyle}>{item.amount}</span>\n    </li>\n  );\n};\n\nexport default NamesListItem;","import React, { useState } from \"react\";\nimport { Order } from \"../types/types\";\nimport useFetch from \"use-http\"\nimport { sortNames } from \"../utils/utils\";\nimport { apiUrl } from \"../config\";\nimport NamesListItem from \"./NamesListItem\";\n\nconst listStyle: React.CSSProperties = {\n  listStyle: \"none\",\n  padding: 0\n}\n\n\n\nconst NamesList = () => {\n  const { loading, error, data } = useFetch(apiUrl, [])\n  const [ order, setOrder ] = useState<Order>(\"desc\");\n\n  if(error) {\n    return <p>An error occured while loading data from the server.</p>\n  }\n\n  if(loading) {\n    return <p>loading...</p>\n  }\n\n  return (    \n    <div>\n      <p>Total count: {data.count}</p>\n      <span>Order by: </span>\n      <button onClick={() => setOrder(\"desc\")}>Amount</button>\n      <button onClick={() => setOrder(\"alph\")}>Alphabetic</button>\n      <ul style={listStyle}>\n        {\n          sortNames([...data.names], order).map((item) => \n            <NamesListItem item={item} key={item.name} /> )\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default NamesList;","import React from \"react\";\nimport { NameItem } from \"../types/types\";\n\nconst headerStyle: React.CSSProperties = { \n  textAlign: \"center\", \n  marginTop: \"2em\" \n};\n\nconst amountStyle: React.CSSProperties = {\n  backgroundColor: \"rebeccapurple\",\n  color: \"#fff\",\n  fontWeight: \"bold\",  \n  borderRadius: \"10em\",\n  minWidth: \"1.5em\",\n  padding: \".25em\",\n  textAlign: \"center\"\n};\n\ninterface Props {\n  resultItem: NameItem\n};\n\nconst SearchResult = ({ resultItem }: Props) => {\n  return (\n    <div>\n      <h3 style={headerStyle}>\n        number of {resultItem?.name}s\n      </h3>\n      <div style={amountStyle}><p>{resultItem?.amount}</p></div>\n    </div>\n  );\n};\n\nexport default SearchResult;","import React, { useState } from \"react\";\nimport useFetch from \"use-http\";\nimport { apiUrl } from \"../config\";\nimport { NameItem } from \"../types/types\";\nimport SearchResult from \"./SearchResult\";\n\nconst SearchName = () => {\n  const { get, loading, error } = useFetch<NameItem>(apiUrl);\n  const [ nameData, setNameData ] = useState<NameItem>();\n  const [ searchword, setSearchword ] = useState<string>(\"\");\n\n  if(error) {\n    return <p>An error occured while loading data from the server.</p>\n  }\n\n  if(loading) {\n    return <p>loading...</p>\n  }\n\n  const getName = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const res = await get(\"/\" + searchword);\n    setNameData(res);\n    return res;\n  }\n\n  return (\n    <div>\n      <form onSubmit={(e) => getName(e)}>\n        <p>Find name:</p>\n        <input value={searchword} onChange={(e) => setSearchword(e.target.value)} />\n        <input type=\"submit\" />\n      </form>\n      {nameData && <SearchResult resultItem={nameData} />}\n    </div>\n  );\n};\n\nexport default SearchName;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NamesList from \"./NamesList\";\nimport SearchName from \"./SearchName\";\n\nconst containerStyle = {\n  margin: \"auto\",\n  maxWidth: \"500px\",\n  padding: \"1em\",\n  background: \"grey\",\n  backgroundImage: \n    'url(\"https://image.freepik.com/free-vector/geometric-grey-background_1055-3147.jpg\")'\n};\n\nconst App = () => {  \n  const [ showAll, setShowAll ] = useState<Boolean>(true);\n\n  return (\n    <div style={containerStyle}>\n      <h1>dev-academy-2021 exercise - Name Application</h1>\n      <button onClick={() => setShowAll(true)}>Show All</button>\n      <button onClick={() => setShowAll(false)}>Search by Name</button>\n      <hr />\n      {showAll ? \n        <NamesList />\n      :\n        <SearchName />\n      }\n      <div>\n        <hr />Olavi Hartonen <a href=\"https://github.com/Tambourin\">https://github.com/Tambourin</a>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}